{"version":3,"file":"static/js/913.7f94080c.chunk.js","mappings":"8LAIO,SAASA,EAAoBC,GAYhC,OAXA,SAA+BC,GAI3B,OAFgBC,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,YAK/C,SAACL,GAAD,UAAsBC,KAHL,SAAC,KAAD,CAAUK,GAAG,c,6GCR1C,EAA0B,yBAA1B,EAAmE,+BAAnE,EAAwH,qCAAxH,EAAwL,0CAAxL,EAA+P,4CAA/P,EAA4T,gCAA5T,EAA0W,6BAA1W,EAA2Z,mCAA3Z,EAAkd,mCAAld,EAA2gB,qCAA3gB,EAAukB,sCAAvkB,EAA0oB,4CAA1oB,EAAktB,2CAAltB,EAA2xB,6CAA3xB,EAAu3B,uBAAv3B,EAA85B,+BAA95B,EAA48B,8B,6BC6D58B,EAvD2CC,EAAAA,MAAW,YAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,WAE1D,GAA0BC,EAAAA,EAAAA,UAASF,GAAnC,eAAOL,EAAP,KAAcQ,EAAd,KACA,GAAgCD,EAAAA,EAAAA,WAAS,GAAzC,eAAOE,EAAP,KAAiBC,EAAjB,MAEAC,EAAAA,EAAAA,YAAU,WAEN,OADAH,EAASH,GACF,WACHG,EAAS,OAEd,CAACH,IAIJ,IAAMO,EAAqB,WACvBN,EAAWN,GACXQ,EAASH,IAsBb,OACI,8BACKI,GACK,kBACEI,WAAS,EACTC,MAAOd,EACPe,SAzBQ,SAACC,GACrBR,EAASQ,EAAEC,cAAcH,QAyBbI,OAtBM,WAClBN,IACAF,GAAY,IAqBAS,UAlBS,SAACH,GACR,UAAVA,EAAEI,KACFR,QAiBM,iBACES,cAda,WACzBX,GAAY,IAYF,SAEGV,S,kDC8IrB,EAxKiDI,EAAAA,MAAW,YAA6B,IAA3BkB,EAA0B,EAA1BA,QAASZ,EAAiB,EAAjBA,YAEnE,GAIIa,EAAAA,EAAAA,IAAwB,CACxBC,cAAe,CACXC,eAAgBH,EAAQG,eACxBC,QAASJ,EAAQI,QACjBC,0BAA2BL,EAAQK,0BACnCC,SAAUN,EAAQM,SAClBC,SAAU,CACNC,OAAQR,EAAQO,SAASC,OACzBC,GAAIT,EAAQO,SAASE,GACrBC,SAAUV,EAAQO,SAASG,SAC3BC,UAAWX,EAAQO,SAASI,UAC5BC,QAASZ,EAAQO,SAASK,QAC1BC,QAASb,EAAQO,SAASM,QAC1BC,QAASd,EAAQO,SAASO,QAC1BC,SAAUf,EAAQO,SAASQ,WAGnCC,aAAc,MACdC,KAAM,cArBNC,EADJ,EACIA,SACYC,EAFhB,EAEIC,UAAYD,OACZE,EAHJ,EAGIA,aAsBEC,GAAWC,EAAAA,EAAAA,MAEXC,EAAWH,GAAa,SAAAI,GACtBH,GAASI,EAAAA,EAAAA,IAAgBD,IACzBrC,GAAY,MAIduC,EAAa,SAACC,EAAkBC,GAClC,OACI,iBAAKC,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SAAmDF,KACnD,0BAAOG,MAAO,CAACC,OAAQ,kBAAmBC,WAAY,QAC3ChB,EAASU,SAM1BO,EAAwB,SAACP,EAAkBC,EAAcO,EAAsBC,GACjF,OACI,iBAAKP,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SAAmDF,KACnD,0BAAOG,MAAO,CAACC,OAAQ,kBAAmBC,WAAY,QAC3ChB,EAASU,EAAM,CACfU,QAAS,CACL9C,MAAO,yCACP+C,QAAS,yBAQpC,OACI,kBAAMf,SAAUA,EAAUM,UAAWU,EAAAA,EAAAA,KAArC,UACKb,EAAW,4BAA6B,aACxCA,EAAW,WAAY,QACvBA,EAAW,UAAW,YACtBQ,EAAsB,kBAAmB,WAC1C,SAAC,IAAD,CACIhB,OAAQA,EACRS,KAAK,kBACLa,OAAQ,YAAiB,IAAfC,EAAc,EAAdA,SACN,OAAOA,EACDC,OAAOC,QAAQF,GAAUG,KAAI,+BAAEC,EAAF,KAAQP,EAAR,YAC3B,cAAcP,MAAO,CAACe,MAAO,OAA7B,SAAsCR,GAA9BO,MAEV,QAGbX,EAAsB,cAAe,OACtC,SAAC,IAAD,CACIhB,OAAQA,EACRS,KAAK,cACLa,OAAQ,YAAiB,IAAfC,EAAc,EAAdA,SACN,OAAOA,EACDC,OAAOC,QAAQF,GAAUG,KAAI,+BAAEC,EAAF,KAAQP,EAAR,YAC3B,cAAcP,MAAO,CAACe,MAAO,OAA7B,SAAsCR,GAA9BO,MAEV,QAGbX,EAAsB,oBAAqB,aAC5C,SAAC,IAAD,CACIhB,OAAQA,EACRS,KAAK,oBACLa,OAAQ,YAAiB,IAAfC,EAAc,EAAdA,SACN,OAAOA,EACDC,OAAOC,QAAQF,GAAUG,KAAI,+BAAEC,EAAF,KAAQP,EAAR,YAC3B,cAAcP,MAAO,CAACe,MAAO,OAA7B,SAAsCR,GAA9BO,MAEV,QAGbX,EAAsB,qBAAsB,cAC7C,SAAC,IAAD,CACIhB,OAAQA,EACRS,KAAK,qBACLa,OAAQ,YAAiB,IAAfC,EAAc,EAAdA,SACN,OAAOA,EACDC,OAAOC,QAAQF,GAAUG,KAAI,+BAAEC,EAAF,KAAQP,EAAR,YAC3B,cAAcP,MAAO,CAACe,MAAO,OAA7B,SAAsCR,GAA9BO,MAEV,QAGbX,EAAsB,mBAAoB,YAC3C,SAAC,IAAD,CACIhB,OAAQA,EACRS,KAAK,mBACLa,OAAQ,YAAiB,IAAfC,EAAc,EAAdA,SACN,OAAOA,EACDC,OAAOC,QAAQF,GAAUG,KAAI,+BAAEC,EAAF,KAAQP,EAAR,YAC3B,cAAcP,MAAO,CAACe,MAAO,OAA7B,SAAsCR,GAA9BO,MAEV,QAGbX,EAAsB,mBAAoB,YAC3C,SAAC,IAAD,CACIhB,OAAQA,EACRS,KAAK,mBACLa,OAAQ,YAAiB,IAAfC,EAAc,EAAdA,SACN,OAAOA,EACDC,OAAOC,QAAQF,GAAUG,KAAI,+BAAEC,EAAF,KAAQP,EAAR,YAC3B,cAAcP,MAAO,CAACe,MAAO,OAA7B,SAAsCR,GAA9BO,MAEV,QAGbX,EAAsB,mBAAoB,YAC3C,SAAC,IAAD,CACIhB,OAAQA,EACRS,KAAK,mBACLa,OAAQ,YAAiB,IAAfC,EAAc,EAAdA,SACN,OAAOA,EACDC,OAAOC,QAAQF,GAAUG,KAAI,+BAAEC,EAAF,KAAQP,EAAR,YAC3B,cAAcP,MAAO,CAACe,MAAO,OAA7B,SAAsCR,GAA9BO,MAEV,QAGbX,EAAsB,oBAAqB,aAC5C,SAAC,IAAD,CACIhB,OAAQA,EACRS,KAAK,oBACLa,OAAQ,YAAiB,IAAfC,EAAc,EAAdA,SACN,OAAOA,EACDC,OAAOC,QAAQF,GAAUG,KAAI,+BAAEC,EAAF,KAAQP,EAAR,YAC3B,cAAcP,MAAO,CAACe,MAAO,OAA7B,SAAsCR,GAA9BO,MAEV,SAGd,mBAAQhB,UAAWU,EAAAA,EAAAA,aAAnB,0EC1KZ,EAf+C1D,EAAAA,MAAW,YAAqB,IAAnBkE,EAAkB,EAAlBA,MAAOxD,EAAW,EAAXA,MAC/D,OACI,8BACKA,IACG,iBAAKsC,UAAWU,EAAhB,WACI,gBAAKV,UAAWU,EAAhB,SAA8CQ,KAC9C,gBAAKlB,UAAWU,EAAhB,UACI,yBAAMhD,cCQ9B,EAfyCV,EAAAA,MAAW,YAAgB,IAAdkB,EAAa,EAAbA,QAElD,OACI,iCACI,SAAC,EAAD,CAAgBgD,MAAO,wCAAWxD,MAAK,OAAEQ,QAAF,IAAEA,OAAF,EAAEA,EAASI,WAClD,SAAC,EAAD,CAAgB4C,MAAO,sEAAgBxD,MAAK,OAAEQ,QAAF,IAAEA,OAAF,EAAEA,EAASK,iCAE9B4C,IAArBjD,EAAQO,UAA0BoC,OAAOO,KAAKlD,EAAQO,UAAUsC,KAAI,SAAAM,GAAE,OAAI,SAAC,EAAD,CACgBH,MAAOG,EACP3D,MAAOQ,EAAQO,SAAS4C,IAFnBA,YCd/G,EAAuB,mBAAvB,EAAyD,2BAAzD,EAAiG,yBAAjG,EAA0I,4BCuC1I,IACA,EAAe,IAA0B,yDC6EzC,IACA,EAAe,IAA0B,0DCrEzC,EAlC2BrE,EAAAA,MAAW,YAAiD,IAA/CC,EAA8C,EAA9CA,KAAMqE,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,GAAIC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,MAEvE,GAA8BtE,EAAAA,EAAAA,WAAS,GAAvC,eAAOuE,EAAP,KAAgBC,EAAhB,KAEMnC,GAAWC,EAAAA,EAAAA,MASjB,OACI,iBAAKO,UAAWU,EAAhB,WACI,iBAAKV,UAAWU,EAAhB,WACI,gBAAKkB,IAAKH,GAAS,yBAA0BI,IAAI,MACjD,0BAAOL,QAEX,gBAAKxB,UAAWU,EAAhB,UACI,uBAAIzD,OAER,iBAAK+C,UAAWU,EAAhB,UACKgB,GACK,gBAAKE,IAAKE,EAAOD,IAAI,QAAQ3B,MAAO,CAAC6B,MAAO,OAAQC,OAAQ,WAC5D,gBAAKC,QAnBI,WAClBP,IACDlC,GAAS0C,EAAAA,EAAAA,IAASX,IAClBI,GAAW,KAgBiCC,IAAKO,EAAMN,IAAI,OAC5C3B,MAAO,CAACkC,YAAa,SAE/Bd,WChBjB,EAhBmCtE,EAAAA,MAAW,YAAkC,IAAhCqF,EAA+B,EAA/BA,MAAOb,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,MAChE,OACI,4BACI,gBAAKzB,UAAWU,EAAhB,SAAkC2B,EAAMC,OAAS,0DAAe,mEAChE,yBACMD,EAAMC,OAGFD,EAAMtB,KAAI,SAAAM,GAAE,OAAI,SAAC,EAAD,CAAMI,MAAOA,EAAOD,YAAaA,EAAaD,GAAIF,EAAGE,GAC/CtE,KAAMoE,EAAGpE,KACTqE,WAAYD,EAAGC,YAFyCD,EAAGE,QAFjF,iBAAKvB,UAAWU,EAAhB,WAAgC,gBAAKkB,IAAK,sBAAuBC,IAAI,MACnE,kN,UCoBxB,EA9BmD7E,EAAAA,MAAW,YAAyB,IAAvBuF,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,QAErE,GAAgCrF,EAAAA,EAAAA,UAAS,IAAzC,eAAOsF,EAAP,KAAiBC,EAAjB,KAIMC,GAAsBC,EAAAA,EAAAA,cAAY,SAAChF,GACrC8E,EAAY9E,EAAEC,cAAcH,SAC7B,IASH,OACI,iBAAKsC,UAAWU,EAAhB,WACM+B,IAAY,gBAAKb,IAAKY,GAAWK,EAAUhB,IAAI,cAEjD,kBAAOnE,MAAO+E,EACP9E,SAAUgF,EACVG,WAbe,SAAClF,GACb,UAAVA,EAAEI,KAAmByE,EAASM,SAC9BR,EAAQE,EAASM,QACjBL,EAAY,MAWLxC,MAAO,CAAC6B,MAAO,QACfiB,YAAY,6FC8F/B,GAAexG,EAAAA,EAAAA,IA1GC,WAAO,IAAD,IAEZyG,GAASC,EAAAA,EAAAA,MACTC,GAAUxG,EAAAA,EAAAA,IAAiC,SAAAC,GAAK,OAAIA,EAAMC,KAAKuG,SAAS7B,MAC9E,GAAgCpE,EAAAA,EAAAA,WAAS,GAAzC,eAAOE,EAAP,KAAiBC,EAAjB,KACM+F,EAAUC,OAAOL,EAAO1B,MAAQ4B,EAChCjF,GAAUvB,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMsB,WACxCqF,GAAe5G,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMsB,QAAQsF,SAASC,UAC9DjE,GAAWC,EAAAA,EAAAA,MACXiE,GAAW/G,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMsB,QAAQwF,YACjDC,GAAkBhH,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMsB,QAAQ0F,kBAG9DrG,EAAAA,EAAAA,YAAU,WAKN,YAJkB4D,IAAd8B,EAAO1B,IACP/B,GAASqE,EAAAA,EAAAA,IAAcZ,EAAO1B,KAG3B,WACH/B,GAASsE,EAAAA,EAAAA,IAAW,KACpBtE,GAASuE,EAAAA,EAAAA,IAAU,KACnBvE,GAASwE,EAAAA,EAAAA,OACTxE,GAASyE,EAAAA,EAAAA,KAAU,OAGxB,CAACzE,EAAUyD,EAAO1B,KAIrB,IAAM2C,GAAuBtB,EAAAA,EAAAA,cAAY,SAACuB,GACtC3E,GAAS4E,EAAAA,EAAAA,IAAeD,MACzB,CAAC3E,IAEE+C,GAAUK,EAAAA,EAAAA,cAAY,SAACH,GACzBjD,GAAS6E,EAAAA,EAAAA,IAAQ5B,MAClB,CAACjD,IAEE8E,GAAwB1B,EAAAA,EAAAA,cAAY,SAAChF,GAAsC,IAAD,EAC5E,UAAIA,EAAE2G,OAAOC,aAAb,OAAI,EAAgBlC,QAChB9C,GAASiF,EAAAA,EAAAA,IAAe7G,EAAE2G,OAAOC,MAAM,OAE5C,CAAChF,IAEJ,OAAKkE,GAKD,iBAAK1D,UAAWU,EAAhB,WACI,gBAAKV,UAAWU,EAAhB,UACI,iBAAKV,UAAWU,EAAhB,UACK2C,GACK,kBAAOqB,QAAQ,YAAf,UAA2B,gBACzB9C,KAAiB,OAAZ2B,QAAY,IAAZA,OAAA,EAAAA,EAAcoB,QAASC,EAAY/C,IAAI,WAC5C7B,UAAWU,OACb,gBAAKkB,KAAiB,OAAZ2B,QAAY,IAAZA,OAAA,EAAAA,EAAcoB,QAASC,EAAY/C,IAAI,WAC5C7B,UAAWU,IAErB2C,IACG,iCACI,kBAAOrC,KAAM,OAAQO,GAAI,YAAa5D,SAAU2G,KAChD,mBACIrC,QAAS,WACL3E,GAAY,IAFpB,qGAUhB,iBAAK0C,UAAWU,EAAhB,WACI,iBAAKV,UAAWU,EAAhB,WACI,gBAAKV,UAAWU,EAAhB,UACI,4BACI,gBAAKV,UAAWU,EAAhB,SAAsCxC,EAAQsF,SAAShF,YACvD,gBAAKwB,UAAWU,EAAhB,SACK2C,EAEIM,EAAkB,IAAK,SAAC,EAAD,CACpB1G,KAAMiB,EAAQiG,QAAU,GAAIjH,WAAYgH,IACzCP,EAAkB,IAAK,iBAAMzD,MAAO,CAAC6B,MAAO,QAArB,SAA+B7D,EAAQiG,iBAKjF,gBAAKnE,UAAWU,EAAhB,SACKrD,GACK,SAAC,EAAD,CAAiBa,QAASA,EAAQsF,SAAUlG,YAAaA,KACzD,SAAC,EAAD,CAAaY,QAAO,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAASsF,gBAI5CH,IACG,SAAC,EAAD,CAAkBd,QAASA,EAASC,QAAO,UAAEtE,EAAQsF,SAASC,cAAnB,aAAE,EAAyBoB,QAEzExB,GACK,SAAC,EAAD,CAAUhB,MAAOnE,EAAQmE,MAAOb,YAAatD,EAAQsF,SAAShF,SACpDiD,MAAK,UAAEvD,EAAQsF,SAASC,cAAnB,aAAE,EAAyBoB,SAC1C,SAAC,EAAD,CAAUxC,MAAO,YAvDxB","sources":["components/hoc/withAuthRedirect.tsx","webpack://vk-clone/./src/components/profile/Profile.module.scss?1751","components/EditableSpan.tsx","components/profile/ProfileEditForm.tsx","components/profile/ProfileInfoRow.tsx","components/profile/ProfileInfo.tsx","webpack://vk-clone/./src/components/profile/Post.module.scss?0fdb","assets/svg/like.svg","assets/svg/liked.svg","components/profile/Post.tsx","components/profile/PostList.tsx","components/profile/ProfilePostInput.tsx","components/profile/Profile.tsx"],"sourcesContent":["import React, {ComponentType} from 'react';\r\nimport {Navigate} from 'react-router-dom';\r\nimport {useAppSelector} from \"../../redux/store\";\r\n\r\nexport function WithAuthRedirect<T>(WrappedComponent: ComponentType<T>) {\r\n    function ComponentWithRedirect(props: T) {\r\n\r\n        const isLogin = useAppSelector(state => state.auth.isLogin)\r\n\r\n        if (!isLogin) return <Navigate to=\"/login\"/>\r\n\r\n        return (\r\n            <WrappedComponent {...props}/>\r\n        )\r\n    }\r\n\r\n    return ComponentWithRedirect\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Profile_content__d0iGJ\",\"first__column\":\"Profile_first__column__+SpFi\",\"first__column__info\":\"Profile_first__column__info__ZJUEf\",\"first__column__info__img\":\"Profile_first__column__info__img__SNDFk\",\"first__column__info__img_1\":\"Profile_first__column__info__img_1__HFwto\",\"second__column\":\"Profile_second__column__VgSa4\",\"description\":\"Profile_description__4ZY3G\",\"description__body\":\"Profile_description__body__PlZd2\",\"description__name\":\"Profile_description__name__Wk3xE\",\"description__status\":\"Profile_description__status__jPd-d\",\"description__details\":\"Profile_description__details__H8icr\",\"description__details__body\":\"Profile_description__details__body__nnKct\",\"description__details__key\":\"Profile_description__details__key__nSZhd\",\"description__details__value\":\"Profile_description__details__value__1QKBO\",\"accordion\":\"Profile_accordion__Eps2q\",\"input\":\"Profile_input__JAzoF\",\"posts__header\":\"Profile_posts__header__zA6If\",\"empty__posts\":\"Profile_empty__posts__GbnGY\"};","import React, {ChangeEvent, FC, useState, KeyboardEvent, useEffect} from 'react';\r\n\r\ntype EditableSpanType = {\r\n    text: string,\r\n    changeText: (text: string) => void\r\n}\r\n\r\nconst EditableSpan: FC<EditableSpanType> = React.memo(({text, changeText}) => {\r\n\r\n    const [state, setState] = useState(text)\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setState(text)\r\n        return () => {\r\n            setState(\"\")\r\n        }\r\n    }, [text])\r\n\r\n    // callbacks\r\n\r\n    const changeTextCallback = () => {\r\n        changeText(state)\r\n        setState(text)\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setState(e.currentTarget.value)\r\n    }\r\n\r\n    const onBlurHandler = () => {\r\n        changeTextCallback()\r\n        setEditMode(false)\r\n    }\r\n\r\n    const onKeyDownHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === \"Enter\") {\r\n            changeTextCallback()\r\n        }\r\n    }\r\n\r\n    const onDoubleClickHandler = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? <input\r\n                    autoFocus\r\n                    value={state}\r\n                    onChange={onChangeHandler}\r\n                    onBlur={onBlurHandler}\r\n                    onKeyDown={onKeyDownHandler}/>\r\n                : <span\r\n                    onDoubleClick={onDoubleClickHandler}>\r\n                    {state}\r\n            </span>}\r\n        </>\r\n    );\r\n})\r\n\r\nexport default EditableSpan;","import React, {FC} from 'react';\r\nimport {ProfileUserInfoType} from \"../../utils/api\";\r\nimport s from \"../login/Login.module.scss\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {EditParamsType, updateProfileTC} from \"../../redux/reducers/profile\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {ErrorMessage} from \"@hookform/error-message\";\r\nimport styles from \"./Profile.module.scss\";\r\n\r\ntype ProfileEditFormType = {\r\n    profile: ProfileUserInfoType\r\n    setEditMode: (editMode: boolean) => void\r\n}\r\n\r\ntype valuesType =\r\n    \"aboutMe\"\r\n    | \"contacts\"\r\n    | \"lookingForAJob\"\r\n    | \"lookingForAJobDescription\"\r\n    | \"fullName\"\r\n    | \"userId\"\r\n    | \"contacts.github\"\r\n    | \"contacts.vk\"\r\n    | \"contacts.facebook\"\r\n    | \"contacts.instagram\"\r\n    | \"contacts.twitter\"\r\n    | \"contacts.website\"\r\n    | \"contacts.youtube\"\r\n    | \"contacts.mainLink\"\r\n\r\nconst ProfileEditForm: FC<ProfileEditFormType> = React.memo(({profile, setEditMode}) => {\r\n\r\n    const {\r\n        register,\r\n        formState: {errors},\r\n        handleSubmit\r\n    } = useForm<EditParamsType>({\r\n        defaultValues: {\r\n            lookingForAJob: profile.lookingForAJob,\r\n            aboutMe: profile.aboutMe,\r\n            lookingForAJobDescription: profile.lookingForAJobDescription,\r\n            fullName: profile.fullName,\r\n            contacts: {\r\n                github: profile.contacts.github,\r\n                vk: profile.contacts.vk,\r\n                facebook: profile.contacts.facebook,\r\n                instagram: profile.contacts.instagram,\r\n                twitter: profile.contacts.twitter,\r\n                website: profile.contacts.website,\r\n                youtube: profile.contacts.youtube,\r\n                mainLink: profile.contacts.mainLink,\r\n            }\r\n        },\r\n        criteriaMode: \"all\",\r\n        mode: 'onTouched'\r\n    });\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onSubmit = handleSubmit(data => {\r\n            dispatch(updateProfileTC(data))\r\n            setEditMode(false)\r\n        }\r\n    );\r\n\r\n    const rowExample = (name: valuesType, desc: string) => {\r\n        return (\r\n            <div className={styles.description__details__body}>\r\n                <div className={styles.description__details__key}>{desc}</div>\r\n                <input style={{border: \"1px solid black\", marginLeft: \"5px\"}}\r\n                       {...register(name)}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const rowExampleWithPattern = (name: valuesType, desc: string, patternValue: RegExp, patternMessage: string) => {\r\n        return (\r\n            <div className={styles.description__details__body}>\r\n                <div className={styles.description__details__key}>{desc}</div>\r\n                <input style={{border: \"1px solid black\", marginLeft: \"5px\"}}\r\n                       {...register(name, {\r\n                           pattern: {\r\n                               value: /^(https?|chrome):\\/\\/[^\\s$.?#].[^\\s]*$/,\r\n                               message: \"Incorrect url\"\r\n                           }\r\n                       })}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className={s.form}>\r\n            {rowExample(\"lookingForAJobDescription\", \"Dream Job\")}\r\n            {rowExample(\"fullName\", \"Name\")}\r\n            {rowExample(\"aboutMe\", \"About me\")}\r\n            {rowExampleWithPattern(\"contacts.github\", \"Github\", /^(https?|chrome):\\/\\/[^\\s$.?#].[^\\s]*$/, \"Incorrect url\")}\r\n            <ErrorMessage\r\n                errors={errors}\r\n                name=\"contacts.github\"\r\n                render={({messages}) => {\r\n                    return messages\r\n                        ? Object.entries(messages).map(([type, message]) => (\r\n                            <p key={type} style={{color: \"red\"}}>{message}</p>\r\n                        ))\r\n                        : null;\r\n                }}\r\n            />\r\n            {rowExampleWithPattern(\"contacts.vk\", \"VK\", /^(https?|chrome):\\/\\/[^\\s$.?#].[^\\s]*$/, \"Incorrect url\")}\r\n            <ErrorMessage\r\n                errors={errors}\r\n                name=\"contacts.vk\"\r\n                render={({messages}) => {\r\n                    return messages\r\n                        ? Object.entries(messages).map(([type, message]) => (\r\n                            <p key={type} style={{color: \"red\"}}>{message}</p>\r\n                        ))\r\n                        : null;\r\n                }}\r\n            />\r\n            {rowExampleWithPattern(\"contacts.facebook\", \"Facebook\", /^(https?|chrome):\\/\\/[^\\s$.?#].[^\\s]*$/, \"Incorrect url\")}\r\n            <ErrorMessage\r\n                errors={errors}\r\n                name=\"contacts.facebook\"\r\n                render={({messages}) => {\r\n                    return messages\r\n                        ? Object.entries(messages).map(([type, message]) => (\r\n                            <p key={type} style={{color: \"red\"}}>{message}</p>\r\n                        ))\r\n                        : null;\r\n                }}\r\n            />\r\n            {rowExampleWithPattern(\"contacts.instagram\", \"Instagram\", /^(https?|chrome):\\/\\/[^\\s$.?#].[^\\s]*$/, \"Incorrect url\")}\r\n            <ErrorMessage\r\n                errors={errors}\r\n                name=\"contacts.instagram\"\r\n                render={({messages}) => {\r\n                    return messages\r\n                        ? Object.entries(messages).map(([type, message]) => (\r\n                            <p key={type} style={{color: \"red\"}}>{message}</p>\r\n                        ))\r\n                        : null;\r\n                }}\r\n            />\r\n            {rowExampleWithPattern(\"contacts.twitter\", \"Twitter\", /^(https?|chrome):\\/\\/[^\\s$.?#].[^\\s]*$/, \"Incorrect url\")}\r\n            <ErrorMessage\r\n                errors={errors}\r\n                name=\"contacts.twitter\"\r\n                render={({messages}) => {\r\n                    return messages\r\n                        ? Object.entries(messages).map(([type, message]) => (\r\n                            <p key={type} style={{color: \"red\"}}>{message}</p>\r\n                        ))\r\n                        : null;\r\n                }}\r\n            />\r\n            {rowExampleWithPattern(\"contacts.website\", \"Website\", /^(https?|chrome):\\/\\/[^\\s$.?#].[^\\s]*$/, \"Incorrect url\")}\r\n            <ErrorMessage\r\n                errors={errors}\r\n                name=\"contacts.website\"\r\n                render={({messages}) => {\r\n                    return messages\r\n                        ? Object.entries(messages).map(([type, message]) => (\r\n                            <p key={type} style={{color: \"red\"}}>{message}</p>\r\n                        ))\r\n                        : null;\r\n                }}\r\n            />\r\n            {rowExampleWithPattern(\"contacts.youtube\", \"Youtube\", /^(https?|chrome):\\/\\/[^\\s$.?#].[^\\s]*$/, \"Incorrect url\")}\r\n            <ErrorMessage\r\n                errors={errors}\r\n                name=\"contacts.youtube\"\r\n                render={({messages}) => {\r\n                    return messages\r\n                        ? Object.entries(messages).map(([type, message]) => (\r\n                            <p key={type} style={{color: \"red\"}}>{message}</p>\r\n                        ))\r\n                        : null;\r\n                }}\r\n            />\r\n            {rowExampleWithPattern(\"contacts.mainLink\", \"MainLink\", /^(https?|chrome):\\/\\/[^\\s$.?#].[^\\s]*$/, \"Incorrect url\")}\r\n            <ErrorMessage\r\n                errors={errors}\r\n                name=\"contacts.mainLink\"\r\n                render={({messages}) => {\r\n                    return messages\r\n                        ? Object.entries(messages).map(([type, message]) => (\r\n                            <p key={type} style={{color: \"red\"}}>{message}</p>\r\n                        ))\r\n                        : null;\r\n                }}\r\n            />\r\n            <button className={s.button_login}>Сохранить</button>\r\n        </form>\r\n    );\r\n})\r\n\r\nexport default ProfileEditForm;","import React, {FC} from 'react';\r\nimport s from \"./Profile.module.scss\";\r\n\r\ntype ProfileInfoRowType = {\r\n    title: string\r\n    value: null | string\r\n}\r\n\r\nconst ProfileInfoRow: FC<ProfileInfoRowType> = React.memo(({title, value}) => {\r\n    return (\r\n        <>\r\n            {value &&\r\n                <div className={s.description__details__body}>\r\n                    <div className={s.description__details__key}>{title}</div>\r\n                    <div className={s.description__details__value}>\r\n                        <div>{value}</div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n})\r\n\r\nexport default ProfileInfoRow;","import React, {FC} from 'react';\r\nimport {ContactsType, ProfileUserInfoType} from \"../../utils/api\";\r\nimport ProfileInfoRow from \"./ProfileInfoRow\";\r\n\r\ntype ProfileFormType = {\r\n    profile: ProfileUserInfoType\r\n}\r\n\r\nconst ProfileInfo: FC<ProfileFormType> = React.memo(({profile}) => {\r\n\r\n    return (\r\n        <>\r\n            <ProfileInfoRow title={\"Обо мне\"} value={profile?.aboutMe}/>\r\n            <ProfileInfoRow title={\"Работа мечты\"} value={profile?.lookingForAJobDescription}/>\r\n            {\r\n                profile.contacts !== undefined && Object.keys(profile.contacts).map(el => <ProfileInfoRow key={el}\r\n                                                                                                          title={el}\r\n                                                                                                          value={profile.contacts[el as keyof ContactsType]}/>)\r\n            }\r\n        </>\r\n    );\r\n})\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__8vvzw\",\"post__author\":\"Post_post__author__knQ1W\",\"post__body\":\"Post_post__body__le1Dg\",\"post__socials\":\"Post_post__socials__aEYb6\"};","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLike(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    width: 24,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"none\",\n    fillRule: \"evenodd\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16 4a5.95 5.95 0 00-3.89 1.7l-.12.11-.12-.11A5.96 5.96 0 007.73 4 5.73 5.73 0 002 9.72c0 3.08 1.13 4.55 6.18 8.54l2.69 2.1c.66.52 1.6.52 2.26 0l2.36-1.84.94-.74c4.53-3.64 5.57-5.1 5.57-8.06A5.73 5.73 0 0016.27 4zm.27 1.8a3.93 3.93 0 013.93 3.92v.3c-.08 2.15-1.07 3.33-5.51 6.84l-2.67 2.08a.04.04 0 01-.04 0L9.6 17.1l-.87-.7C4.6 13.1 3.8 11.98 3.8 9.73A3.93 3.93 0 017.73 5.8c1.34 0 2.51.62 3.57 1.92a.9.9 0 001.4-.01c1.04-1.3 2.2-1.91 3.57-1.91z\",\n    fill: \"#99A2AD\",\n    fillRule: \"nonzero\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLike);\nexport default __webpack_public_path__ + \"static/media/like.5c13e055b21f80cda9612e73b58f1404.svg\";\nexport { ForwardRef as ReactComponent };","var _defs, _g, _g2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLiked(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 64 64\",\n    width: 64,\n    height: 64,\n    preserveAspectRatio: \"xMidYMid meet\",\n    style: {\n      width: \"100%\",\n      height: \"100%\",\n      transform: \"translate3d(0px, 0px, 0px)\"\n    },\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"__lottie_element_2\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 64,\n    height: 64,\n    x: 0,\n    y: 0\n  })), /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"__lottie_element_4\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0,0 L512,0 L512,512 L0,512z\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"__lottie_element_11\",\n    spreadMethod: \"pad\",\n    gradientUnits: \"userSpaceOnUse\",\n    cx: 11,\n    cy: -24,\n    r: 78.1542012445136,\n    fx: 11,\n    fy: -24\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"1%\",\n    stopColor: \"rgb(255,51,71)\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"82%\",\n    stopColor: \"rgb(231,32,53)\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"100%\",\n    stopColor: \"rgb(207,13,35)\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"__lottie_element_11\",\n    spreadMethod: \"pad\",\n    gradientUnits: \"userSpaceOnUse\",\n    cx: 11,\n    cy: -24,\n    r: 78.1542012445136,\n    fx: 11,\n    fy: -24\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"1%\",\n    stopColor: \"rgb(255,51,71)\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"82%\",\n    stopColor: \"rgb(231,32,53)\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"100%\",\n    stopColor: \"rgb(207,13,35)\"\n  })))), /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#__lottie_element_2)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#__lottie_element_4)\",\n    transform: \"matrix(0.125,0,0,0.125,0,0)\",\n    opacity: 1,\n    style: {\n      display: \"block\"\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"matrix(6,0,0,6,256,256)\",\n    opacity: 1,\n    style: {\n      display: \"block\"\n    }\n  }, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 1,\n    transform: \"matrix(1,0,0,1,0,0)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"url(\\\"#__lottie_element_11\\\")\",\n    fillOpacity: 1,\n    d: \" M32,0 C32,17.670000076293945 17.670000076293945,32 0,32 C-17.670000076293945,32 -32,17.670000076293945 -32,0 C-32,-17.670000076293945 -17.670000076293945,-32 0,-32 C17.670000076293945,-32 32,-17.670000076293945 32,0z\"\n  })))), /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"matrix(6,0,0,6,256,256)\",\n    opacity: 1,\n    style: {\n      display: \"block\"\n    }\n  }, _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 1,\n    transform: \"matrix(1,0,0,1,0,0)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FFFFFF\",\n    fillOpacity: 1,\n    d: \" M19,-3.5350000858306885 C19,4.623000144958496 4.315000057220459,13.680999755859375 0.7110000252723694,15.781000137329102 C0.21899999678134918,16.069000244140625 -0.3840000033378601,16.069000244140625 -0.8880000114440918,15.803999900817871 C-4.638999938964844,13.75 -19,4.6570000648498535 -19,-3.5350000858306885 C-19,-9.315999984741211 -14.869000434875488,-14 -8.940999984741211,-14 C-5.214000225067139,-14 -1.9190000295639038,-12.142000198364258 0,-9.3149995803833 C1.9190000295639038,-12.142000198364258 5.214000225067139,-14 8.940999984741211,-14 C14.869000434875488,-14 19,-9.315999984741211 19,-3.5350000858306885z\"\n  })))))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLiked);\nexport default __webpack_public_path__ + \"static/media/liked.82d1f98a631639cd73b55ba333adf5a3.svg\";\nexport { ForwardRef as ReactComponent };","import React, {FC, useState} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {likePost} from \"../../redux/reducers/profile\";\r\nimport s from \"./Post.module.scss\"\r\nimport {Nullable} from \"../../redux/store\";\r\nimport like from \"../../assets/svg/like.svg\"\r\nimport liked from \"../../assets/svg/liked.svg\"\r\n\r\ntype PostType = {\r\n    text: string,\r\n    likesCount: number\r\n    id: number\r\n    profileName: string | undefined\r\n    photo: Nullable<string> | undefined\r\n}\r\n\r\nconst Post: FC<PostType> = React.memo(({text, likesCount, id, profileName, photo}) => {\r\n\r\n    const [clicked, setClicked] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onclickLikeHandler = () => {\r\n        if (!clicked) {\r\n            dispatch(likePost(id))\r\n            setClicked(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.post}>\r\n            <div className={s.post__author}>\r\n                <img src={photo || \"/assets/img/avatar.jpg\"} alt=\"\"/>\r\n                <span>{profileName}</span>\r\n            </div>\r\n            <div className={s.post__body}>\r\n                <p>{text}</p>\r\n            </div>\r\n            <div className={s.post__socials}>\r\n                {clicked\r\n                    ? <img src={liked} alt=\"liked\" style={{width: \"24px\", height: \"24px\"}}/>\r\n                    : <img onClick={onclickLikeHandler} src={like} alt=\"like\"\r\n                           style={{marginRight: \"2px\"}}/>\r\n                }\r\n                {likesCount}\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default Post;","import React, {FC} from 'react';\r\nimport s from \"./Profile.module.scss\";\r\nimport Post from \"./Post\";\r\nimport {PostType} from \"../../redux/reducers/profile\";\r\nimport {Nullable} from \"../../redux/store\";\r\n\r\ntype PostListType = {\r\n    posts: PostType[]\r\n    profileName?: string\r\n    photo?: Nullable<string>\r\n}\r\n\r\nconst PostList: FC<PostListType> = React.memo(({posts, profileName, photo}) => {\r\n    return (\r\n        <div>\r\n            <div className={s.posts__header}>{posts.length ? \"Мои записи\" : \"Нет записей\"}</div>\r\n            <div>\r\n                {!posts.length\r\n                    ? <div className={s.empty__posts}><img src={\"/assets/svg/bin.svg\"} alt=\"\"/>\r\n                        <span>На стене нет пока ни одной записи</span></div>\r\n                    : posts.map(el => <Post photo={photo} profileName={profileName} id={el.id} key={el.id}\r\n                                            text={el.text}\r\n                                            likesCount={el.likesCount}/>)}\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default PostList;","import React, {ChangeEvent, FC, KeyboardEvent, useCallback, useState} from 'react';\r\nimport s from \"./Profile.module.scss\";\r\nimport userLogo from \"../../assets/img/avatar.jpg\"\r\n\r\ntype ProfilePostInputType = {\r\n    setPost: (text: string) => void\r\n    userImg: string | null\r\n}\r\n\r\nconst ProfilePostInput: FC<ProfilePostInputType> = React.memo(({setPost, userImg}) => {\r\n\r\n    const [postText, setPostText] = useState(\"\")\r\n\r\n    // callbacks\r\n\r\n    const onChangePostHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        setPostText(e.currentTarget.value)\r\n    }, [])\r\n\r\n    const onKeyPressPostHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === \"Enter\" && postText.trim()) {\r\n            setPost(postText.trim())\r\n            setPostText(\"\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.input}>\r\n            {!postText && <img src={userImg || userLogo} alt=\"userLogo\"/>\r\n            }\r\n            <input value={postText}\r\n                   onChange={onChangePostHandler}\r\n                   onKeyPress={onKeyPressPostHandler}\r\n                   style={{width: \"100%\"}}\r\n                   placeholder=\"Что у вас нового?\"/>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default ProfilePostInput;","import React, {ChangeEvent, useCallback, useEffect, useState} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {\r\n    addPost,\r\n    changeStatusTC, clearPosts,\r\n    fetchUserData, setLoaded,\r\n    setProfile,\r\n    setStatus,\r\n    updatePhotoTC\r\n} from \"../../redux/reducers/profile\";\r\nimport s from \"./Profile.module.scss\"\r\nimport {useParams} from \"react-router-dom\";\r\nimport {WithAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport EditableSpan from \"../EditableSpan\";\r\nimport {Nullable, useAppSelector} from \"../../redux/store\";\r\nimport ProfileEditForm from './ProfileEditForm';\r\nimport ProfileInfo from \"./ProfileInfo\";\r\nimport PostList from \"./PostList\";\r\nimport ProfilePostInput from \"./ProfilePostInput\";\r\nimport userAvatar from \"../../.././src/assets/img/avatar.jpg\"\r\nimport {ProfileUserInfoType} from \"../../utils/api\";\r\n\r\nconst Profile = () => {\r\n\r\n    const params = useParams<\"id\">()\r\n    const ownerId = useAppSelector<Nullable<number>>(state => state.auth.userData.id)\r\n    const [editMode, setEditMode] = useState(false)\r\n    const isOwner = Number(params.id) === ownerId\r\n    const profile = useAppSelector(state => state.profile)\r\n    const photoProfile = useAppSelector(state => state.profile.userInfo.photos)\r\n    const dispatch = useDispatch()\r\n    const isLoaded = useAppSelector(state => state.profile.isLoaded)\r\n    const statusIsLoading = useAppSelector(state => state.profile.statusLoading)\r\n\r\n\r\n    useEffect(() => {\r\n        if (params.id !== undefined) {\r\n            dispatch(fetchUserData(params.id))\r\n        }\r\n\r\n        return () => {\r\n            dispatch(setProfile({} as ProfileUserInfoType))\r\n            dispatch(setStatus(\"\"))\r\n            dispatch(clearPosts())\r\n            dispatch(setLoaded(false))\r\n        }\r\n\r\n    }, [dispatch, params.id])\r\n\r\n    // callbacks\r\n\r\n    const updateStatusCallback = useCallback((status: string) => {\r\n        dispatch(changeStatusTC(status))\r\n    }, [dispatch])\r\n\r\n    const setPost = useCallback((postText: string) => {\r\n        dispatch(addPost(postText))\r\n    }, [dispatch])\r\n\r\n    const onChangePhotoCallback = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files?.length) {\r\n            dispatch(updatePhotoTC((e.target.files[0])))\r\n        }\r\n    }, [dispatch])\r\n\r\n    if (!isLoaded) {\r\n        return <div/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <div className={s.first__column}>\r\n                <div className={s.first__column__info}>\r\n                    {isOwner\r\n                        ? <label htmlFor=\"changeImg\"><img\r\n                            src={photoProfile?.large || userAvatar} alt=\"userLogo\"\r\n                            className={s.first__column__info__img}/></label>\r\n                        : <img src={photoProfile?.large || userAvatar} alt=\"userLogo\"\r\n                               className={s.first__column__info__img_1}/>\r\n                    }\r\n                    {isOwner &&\r\n                        <>\r\n                            <input type={\"file\"} id={\"changeImg\"} onChange={onChangePhotoCallback}/>\r\n                            <button\r\n                                onClick={() => {\r\n                                    setEditMode(true)\r\n                                }}\r\n                            >Редактировать\r\n                            </button>\r\n                        </>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className={s.second__column}>\r\n                <div className={s.description}>\r\n                    <div className={s.description__body}>\r\n                        <div>\r\n                            <div className={s.description__name}>{profile.userInfo.fullName}</div>\r\n                            <div className={s.description__status}>\r\n                                {isOwner\r\n                                    ?\r\n                                    (statusIsLoading ? \"\" : <EditableSpan\r\n                                        text={profile.status || \"\"} changeText={updateStatusCallback}/>)\r\n                                    : (statusIsLoading ? \"\" : <span style={{width: \"100%\"}}>{profile.status}</span>)\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.description__details}>\r\n                        {editMode\r\n                            ? <ProfileEditForm profile={profile.userInfo} setEditMode={setEditMode}/>\r\n                            : <ProfileInfo profile={profile?.userInfo}/>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                {isOwner &&\r\n                    <ProfilePostInput setPost={setPost} userImg={profile.userInfo.photos?.small}/>\r\n                }\r\n                {isOwner\r\n                    ? <PostList posts={profile.posts} profileName={profile.userInfo.fullName}\r\n                                photo={profile.userInfo.photos?.small}/>\r\n                    : <PostList posts={[]}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WithAuthRedirect(Profile)"],"names":["WithAuthRedirect","WrappedComponent","props","useAppSelector","state","auth","isLogin","to","React","text","changeText","useState","setState","editMode","setEditMode","useEffect","changeTextCallback","autoFocus","value","onChange","e","currentTarget","onBlur","onKeyDown","key","onDoubleClick","profile","useForm","defaultValues","lookingForAJob","aboutMe","lookingForAJobDescription","fullName","contacts","github","vk","facebook","instagram","twitter","website","youtube","mainLink","criteriaMode","mode","register","errors","formState","handleSubmit","dispatch","useDispatch","onSubmit","data","updateProfileTC","rowExample","name","desc","className","styles","style","border","marginLeft","rowExampleWithPattern","patternValue","patternMessage","pattern","message","s","render","messages","Object","entries","map","type","color","title","undefined","keys","el","likesCount","id","profileName","photo","clicked","setClicked","src","alt","liked","width","height","onClick","likePost","like","marginRight","posts","length","setPost","userImg","postText","setPostText","onChangePostHandler","useCallback","userLogo","onKeyPress","trim","placeholder","params","useParams","ownerId","userData","isOwner","Number","photoProfile","userInfo","photos","isLoaded","statusIsLoading","statusLoading","fetchUserData","setProfile","setStatus","clearPosts","setLoaded","updateStatusCallback","status","changeStatusTC","addPost","onChangePhotoCallback","target","files","updatePhotoTC","htmlFor","large","userAvatar","small"],"sourceRoot":""}